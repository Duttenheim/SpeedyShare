CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(speedyshare)

SET(QT_USE_QTNETWORK TRUE)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
OPTION(USE_QT5 "Uses Qt5 instead of Qt4" FALSE)
SET(PROJECTBINDIR "../bin/")
SET(TARGETNAME speedyshare)


IF(USE_QT5)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_PREFIX_PATH $ENV{QT5DIR})
FIND_PACKAGE(Qt5Core REQUIRED)
FIND_PACKAGE(Qt5Widgets REQUIRED)
FIND_PACKAGE(Qt5Network REQUIRED)
ELSE()
FIND_PACKAGE(Qt4 REQUIRED)
ENDIF()

FILE(GLOB SRC "code/*.cpp")
FILE(GLOB HEAD "code/*.h")
SOURCE_GROUP(speedyshare FILES ${SRC} ${HEAD})
LIST(APPEND CODE ${SRC} ${HEAD})

FILE(GLOB UI "ui/*.ui")

IF(USE_QT5)
QT5_WRAP_CPP(speedyshare_headers_moc ${HEAD})
QT5_WRAP_UI(speedyshare_ui ${UI})
QT5_ADD_RESOURCES(speedyshare_res "ui/resources.qrc")
ADD_DEFINITIONS(__QT5__)
ELSE()
QT4_WRAP_CPP(speedyshare_headers_moc ${HEAD})
QT4_WRAP_UI(speedyshare_ui ${UI})
QT4_ADD_RESOURCES(speedyshare_res "ui/resources.qrc")
INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})
ENDIF()


ADD_EXECUTABLE(speedyshare ${CODE} ${UI} ${speedyshare_headers_moc})
TARGET_LINK_LIBRARIES(speedyshare ${QT_LIBRARIES})

SET_TARGET_PROPERTIES(${TARGETNAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECTBINDIR})
SET_TARGET_PROPERTIES(${TARGETNAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECTBINDIR})
SET_TARGET_PROPERTIES(${TARGETNAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECTBINDIR})
SET_TARGET_PROPERTIES(${TARGETNAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${PROJECTBINDIR})
SET_TARGET_PROPERTIES(${TARGETNAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${PROJECTBINDIR})	

